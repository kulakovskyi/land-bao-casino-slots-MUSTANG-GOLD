"use strict";

var _this2 = void 0;
var icons = ['win1.png', 'win2.png', 'win3.png', 'win4.png', 'win5.png', 'win6.png', 'win7.png', 'win8.png'];

//confetti
var Confettiful = function Confettiful(el) {
  this.el = el;
  this.containerEl = null;
  this.confettiFrequency = 3;
  this.confettiColors = ["url('img/star.png') no-repeat 50% 0/contain", "url('img/star.png') no-repeat 50% 0/contain", "url('img/star.png') no-repeat 50% 0/contain", "url('../img/star.png') no-repeat 50% 0/contain"];
  this.confettiAnimations = ['slow', 'medium', 'fast'];
  this._setupElements();
  this._renderConfetti();
};
Confettiful.prototype._setupElements = function () {
  var containerEl = document.createElement('div');
  var elPosition = this.el.style.position;
  if (elPosition !== 'relative' || elPosition !== 'absolute') {
    this.el.style.position = 'absolute';
  }
  containerEl.classList.add('confetti-container');
  this.el.appendChild(containerEl);
  this.containerEl = containerEl;
};
Confettiful.prototype._renderConfetti = function () {
  var _this = this;
  this.confettiInterval = setInterval(function () {
    var confettiEl = document.createElement('div');
    var confettiSize = Math.floor(Math.random() * 3) + 17 + 'px';
    var confettiBackground = _this.confettiColors[Math.floor(Math.random() * _this.confettiColors.length)];
    var confettiLeft = Math.floor(Math.random() * _this.el.offsetWidth) + 'px';
    var confettiAnimation = _this.confettiAnimations[Math.floor(Math.random() * _this.confettiAnimations.length)];
    confettiEl.classList.add('confetti', 'confetti--animation-' + confettiAnimation);
    confettiEl.style.left = confettiLeft;
    confettiEl.style.width = confettiSize;
    confettiEl.style.height = confettiSize;
    confettiEl.style.background = confettiBackground;
    confettiEl.removeTimeout = setTimeout(function () {
      confettiEl.parentNode.removeChild(confettiEl);
    }, 3000);
    _this.containerEl.appendChild(confettiEl);
  }, 60);
};
window.confettiful = new Confettiful(document.querySelector('.js-container'));
var slots = document.querySelector('.bao__slot');
var cols = document.querySelectorAll('.col');
var col1 = document.querySelector('.col-one');
var col2 = document.querySelector('.col-two');
var col3 = document.querySelector('.col-three');
for (var i in cols) {
  if (!cols.hasOwnProperty(i)) continue;
  var col = cols[i];
  var str = '';
  var firstThree = '';
  for (var x = 0; x < 30; x++) {
    var part = '<img class="icon" src="img/slots/' + icons[Math.floor(Math.random() * icons.length)] + '">';
    str += part;
    if (x < 3) firstThree += part;
  }
  var content = col.innerHTML;
  col.innerHTML = content + str + firstThree;
}
var win3 = document.querySelectorAll('.start3');
var win2 = document.querySelectorAll('.start2');
var overlay = document.querySelector('.bao__overlay');
var firstWin = document.querySelector('.bao__firstWin');
var firstWinBtn = document.querySelector('.bao__firstWin-btn');
var secondWin = document.querySelector('.bao__secondWin');
var textMain = document.querySelector('.bao__text');
var textWin = document.querySelector('.bao__textWin');
var btn = document.querySelector('.bao__btn');
var firstwinAnim = document.querySelector('.win-fire');
var secondwinAnim = document.querySelector('.win-fire-blue');
var firstWinScale = document.querySelectorAll('.win-scale');
var secondWinScale = document.querySelectorAll('.win-scale-blue');
var counter = '';
btn.addEventListener('click', function () {
  spin(_this2);
  counter++;
  btn.classList.add('pointer-none');
});
firstWinBtn.addEventListener('click', function () {
  btn.classList.remove('pointer-none');
  overlay.classList.add('opacity');
  firstWin.classList.add('hidden');
  col2.classList.remove('win');
  col3.classList.remove('win');
  firstwinAnim.classList.remove('_add');
  firstWinScale.forEach(function (item) {
    item.classList.remove('_add');
  });
});
function spin(elem) {
  slots.classList.toggle('spinning', true);
  window.setTimeout(function () {
    var startIcon = document.querySelectorAll('.start');
    startIcon.forEach(function (item) {
      item.style.display = 'none';
    });
    win2.forEach(function (item) {
      item.style.display = 'block';
      item.style.transform = 'scaleX(-1) rotate(180deg)';
    });
    var icons = ['win1.png', 'win2.png', 'win3.png', 'win4.png', 'win5.png', 'win6.png', 'win7.png', 'win8.png'];
    if (counter === 1) {
      var results1 = [icons[0], icons[0], icons[0]];
      var results2 = [icons[5], icons[7], icons[6]];
      var results3 = [icons[4], icons[2], icons[3]];
      var icons = col1.querySelectorAll('.icon');
      for (var x = 0; x < 3; x++) {
        icons[x].setAttribute('src', 'img/slots/' + results1[x]);
        icons[icons.length - 3 + x].setAttribute('src', 'img/slots/' + results1[x]);
      }
      var icons2 = col2.querySelectorAll('.icon');
      var icons3 = col3.querySelectorAll('.icon');
      for (var x = 0; x < 3; x++) {
        icons2[x].setAttribute('src', 'img/slots/' + results2[x]);
        icons2[icons.length - 3 + x].setAttribute('src', 'img/slots/' + results2[x]);
        icons3[x].setAttribute('src', 'img/slots/' + results3[x]);
        icons3[icons.length - 3 + x].setAttribute('src', 'img/slots/' + results3[x]);
      }
      col2.classList.add('win');
      col3.classList.add('win');
      textWin.classList.add('visible');
      setTimeout(function () {
        firstwinAnim.classList.add('_add');
        firstWinScale.forEach(function (item) {
          item.classList.add('_add');
        });
      }, 1500);
      setTimeout(function () {
        overlay.classList.remove('opacity');
        firstWin.classList.remove('hidden');
        textMain.innerHTML = 'One attempt left';
      }, 3300);
    }
    if (counter === 2) {
      win3.forEach(function (item) {
        item.style.display = 'block';
        item.style.transform = 'scaleX(-1) rotate(180deg)';
      });
      //for ios fox
      for (var x = 0; x < 9; x++) {
        win2[0].setAttribute('src', 'img/slots/win1.png');
        win2[1].setAttribute('src', 'img/slots/win7.png');
        win2[2].setAttribute('src', 'img/slots/win6.png');
        win2[3].setAttribute('src', 'img/slots/win3.png');
        win2[4].setAttribute('src', 'img/slots/win3.png');
        win2[5].setAttribute('src', 'img/slots/win3.png');
        win2[6].setAttribute('src', 'img/slots/win5.png');
        win2[7].setAttribute('src', 'img/slots/win3.png');
        win2[8].setAttribute('src', 'img/slots/win4.png');
      }
      var results1 = [icons[0], icons[6], icons[5]];
      var results2 = [icons[2], icons[2], icons[2]];
      var icons = col1.querySelectorAll('.icon');
      var icons2 = col2.querySelectorAll('.icon');
      for (var x = 0; x < 3; x++) {
        icons[x].setAttribute('src', 'img/slots/' + results1[x]);
        icons[icons.length - 3 + x].setAttribute('src', 'img/slots/' + results1[x]);
        icons2[x].setAttribute('src', 'img/slots/' + results2[x]);
        icons2[icons.length - 3 + x].setAttribute('src', 'img/slots/' + results2[x]);
      }
      col1.classList.add('win');
      col3.classList.add('win');
      setTimeout(function () {
        secondwinAnim.classList.add('_add');
        secondWinScale.forEach(function (item) {
          item.classList.add('_add');
        });
      }, 1500);
      setTimeout(function () {
        overlay.classList.remove('opacity');
        secondWin.classList.remove('hidden');
      }, 3300);
    }
  }, 1500);
  window.setTimeout(function () {
    slots.classList.toggle('spinning', false);
  }.bind(elem), 3500);
}
(function () {
  var url = new URL(window.location.href);
  if (url.searchParams.has('qtag')) {
    localStorage.setItem('qtag', url.searchParams.get('qtag'));
  }
  window.addEventListener('click', function (e) {
    var parent = e.target.closest('a');
    if (parent) {
      e.preventDefault();
      var link = new URL(parent.href);
      link.searchParams.set('qtag', localStorage.getItem('qtag'));
      document.location.href = link;
    }
  });
})();
"use strict";
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiLCJzZWNvbmQuanMiXSwibmFtZXMiOlsiaWNvbnMiLCJDb25mZXR0aWZ1bCIsImVsIiwiY29udGFpbmVyRWwiLCJjb25mZXR0aUZyZXF1ZW5jeSIsImNvbmZldHRpQ29sb3JzIiwiY29uZmV0dGlBbmltYXRpb25zIiwiX3NldHVwRWxlbWVudHMiLCJfcmVuZGVyQ29uZmV0dGkiLCJwcm90b3R5cGUiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJlbFBvc2l0aW9uIiwic3R5bGUiLCJwb3NpdGlvbiIsImNsYXNzTGlzdCIsImFkZCIsImFwcGVuZENoaWxkIiwiY29uZmV0dGlJbnRlcnZhbCIsInNldEludGVydmFsIiwiY29uZmV0dGlFbCIsImNvbmZldHRpU2l6ZSIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsImNvbmZldHRpQmFja2dyb3VuZCIsImxlbmd0aCIsImNvbmZldHRpTGVmdCIsIm9mZnNldFdpZHRoIiwiY29uZmV0dGlBbmltYXRpb24iLCJsZWZ0Iiwid2lkdGgiLCJoZWlnaHQiLCJiYWNrZ3JvdW5kIiwicmVtb3ZlVGltZW91dCIsInNldFRpbWVvdXQiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJ3aW5kb3ciLCJjb25mZXR0aWZ1bCIsInF1ZXJ5U2VsZWN0b3IiLCJzbG90cyIsImNvbHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiY29sMSIsImNvbDIiLCJjb2wzIiwiaSIsImhhc093blByb3BlcnR5IiwiY29sIiwic3RyIiwiZmlyc3RUaHJlZSIsIngiLCJwYXJ0IiwiY29udGVudCIsImlubmVySFRNTCIsIndpbjMiLCJ3aW4yIiwib3ZlcmxheSIsImZpcnN0V2luIiwiZmlyc3RXaW5CdG4iLCJzZWNvbmRXaW4iLCJ0ZXh0TWFpbiIsInRleHRXaW4iLCJidG4iLCJmaXJzdHdpbkFuaW0iLCJzZWNvbmR3aW5BbmltIiwiZmlyc3RXaW5TY2FsZSIsInNlY29uZFdpblNjYWxlIiwiY291bnRlciIsImFkZEV2ZW50TGlzdGVuZXIiLCJzcGluIiwicmVtb3ZlIiwiZm9yRWFjaCIsIml0ZW0iLCJlbGVtIiwidG9nZ2xlIiwic3RhcnRJY29uIiwiZGlzcGxheSIsInRyYW5zZm9ybSIsInJlc3VsdHMxIiwicmVzdWx0czIiLCJyZXN1bHRzMyIsInNldEF0dHJpYnV0ZSIsImljb25zMiIsImljb25zMyIsImJpbmQiLCJ1cmwiLCJVUkwiLCJsb2NhdGlvbiIsImhyZWYiLCJzZWFyY2hQYXJhbXMiLCJoYXMiLCJsb2NhbFN0b3JhZ2UiLCJzZXRJdGVtIiwiZ2V0IiwiZSIsInBhcmVudCIsInRhcmdldCIsImNsb3Nlc3QiLCJwcmV2ZW50RGVmYXVsdCIsImxpbmsiLCJzZXQiLCJnZXRJdGVtIl0sIm1hcHBpbmdzIjoiOzs7QUFBQSxJQUFJQSxLQUFLLEdBQUcsQ0FDUixVQUFVLEVBQUMsVUFBVSxFQUFDLFVBQVUsRUFBQyxVQUFVLEVBQUMsVUFBVSxFQUFDLFVBQVUsRUFBQyxVQUFVLEVBQUMsVUFBVSxDQUMxRjs7QUFJRDtBQUNBLElBQU1DLFdBQVcsR0FBRyxTQUFkQSxXQUFXLENBQVlDLEVBQUUsRUFBRTtFQUM3QixJQUFJLENBQUNBLEVBQUUsR0FBR0EsRUFBRTtFQUNaLElBQUksQ0FBQ0MsV0FBVyxHQUFHLElBQUk7RUFFdkIsSUFBSSxDQUFDQyxpQkFBaUIsR0FBRyxDQUFDO0VBQzFCLElBQUksQ0FBQ0MsY0FBYyxHQUFHLCtMQUErTDtFQUNyTixJQUFJLENBQUNDLGtCQUFrQixHQUFHLENBQUMsTUFBTSxFQUFFLFFBQVEsRUFBRSxNQUFNLENBQUM7RUFHcEQsSUFBSSxDQUFDQyxjQUFjLEVBQUU7RUFDckIsSUFBSSxDQUFDQyxlQUFlLEVBQUU7QUFFMUIsQ0FBQztBQUVEUCxXQUFXLENBQUNRLFNBQVMsQ0FBQ0YsY0FBYyxHQUFHLFlBQVc7RUFDOUMsSUFBTUosV0FBVyxHQUFHTyxRQUFRLENBQUNDLGFBQWEsQ0FBQyxLQUFLLENBQUM7RUFDakQsSUFBTUMsVUFBVSxHQUFHLElBQUksQ0FBQ1YsRUFBRSxDQUFDVyxLQUFLLENB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LENBQUNQLElBQUksQ0FBQztNQUMvQlcsSUFBSSxDQUFDVixZQUFZLENBQUNXLEdBQUcsQ0FBQyxNQUFNLEVBQUVULFlBQVksQ0FBQ1UsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO01BQzNEN0YsUUFBUSxDQUFDK0UsUUFBUSxDQUFDQyxJQUFJLEdBQUdXLElBQUk7SUFDakM7RUFDSixDQUFDLENBQUM7QUFDTixDQUFDLEdBQUc7QUN0UUoiLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBpY29ucyA9IFtcbiAgICAnd2luMS5wbmcnLCd3aW4yLnBuZycsJ3dpbjMucG5nJywnd2luNC5wbmcnLCd3aW41LnBuZycsJ3dpbjYucG5nJywnd2luNy5wbmcnLCd3aW44LnBuZydcbl07XG5cblxuXG4vL2NvbmZldHRpXG5jb25zdCBDb25mZXR0aWZ1bCA9IGZ1bmN0aW9uKGVsKSB7XG4gICAgdGhpcy5lbCA9IGVsO1xuICAgIHRoaXMuY29udGFpbmVyRWwgPSBudWxsO1xuXG4gICAgdGhpcy5jb25mZXR0aUZyZXF1ZW5jeSA9IDM7XG4gICAgdGhpcy5jb25mZXR0aUNvbG9ycyA9IFtgdXJsKCdpbWcvc3Rhci5wbmcnKSBuby1yZXBlYXQgNTAlIDAvY29udGFpbmAsIGB1cmwoJ2ltZy9zdGFyLnBuZycpIG5vLXJlcGVhdCA1MCUgMC9jb250YWluYCwgYHVybCgnaW1nL3N0YXIucG5nJykgbm8tcmVwZWF0IDUwJSAwL2NvbnRhaW5gLCBgdXJsKCcuLi9pbWcvc3Rhci5wbmcnKSBuby1yZXBlYXQgNTAlIDAvY29udGFpbmBdO1xuICAgIHRoaXMuY29uZmV0dGlBbmltYXRpb25zID0gWydzbG93JywgJ21lZGl1bScsICdmYXN0J107XG5cblxuICAgIHRoaXMuX3NldHVwRWxlbWVudHMoKTtcbiAgICB0aGlzLl9yZW5kZXJDb25mZXR0aSgpO1xuXG59O1xuXG5Db25mZXR0aWZ1bC5wcm90b3R5cGUuX3NldHVwRWxlbWVudHMgPSBmdW5jdGlvbigpIHtcbiAgICBjb25zdCBjb250YWluZXJFbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGNvbnN0IGVsUG9zaXRpb24gPSB0aGlzLmVsLnN0eWxlLnBvc2l0aW9uO1xuXG4gICAgaWYgKGVsUG9zaXRpb24gIT09ICdyZWxhdGl2ZScgfHwgZWxQb3NpdGlvbiAhPT0gJ2Fic29sdXRlJykge1xuICAgICAgICB0aGlzLmVsLnN0eWxlLnBvc2l0aW9uID0gJ2Fic29sdXRlJztcbiAgICB9XG5cbiAgICBjb250YWluZXJFbC5jbGFzc0xpc3QuYWRkKCdjb25mZXR0aS1jb250YWluZXInKTtcblxuICAgIHRoaXMuZWwuYXBwZW5kQ2hpbGQoY29udGFpbmVyRWwpO1xuXG4gICAgdGhpcy5jb250YWluZXJFbCA9IGNvbnRhaW5lckVsO1xufTtcblxuQ29uZmV0dGlmdWwucHJvdG90eXBlLl9yZW5kZXJDb25mZXR0aSA9IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuY29uZmV0dGlJbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHtcbiAgICAgICAgY29uc3QgY29uZmV0dGlFbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBjb25zdCBjb25mZXR0aVNpemUgPSAoTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMykgKyAxNykgKyAncHgnO1xuICAgICAgICBjb25zdCBjb25mZXR0aUJhY2tncm91bmQgPSB0aGlzLmNvbmZldHRpQ29sb3JzW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHRoaXMuY29uZmV0dGlDb2xvcnMubGVuZ3RoKV07XG4gICAgICAgIGNvbnN0IGNvbmZldHRpTGVmdCA9IChNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiB0aGlzLmVsLm9mZnNldFdpZHRoKSkgKyAncHgnO1xuICAgICAgICBjb25zdCBjb25mZXR0aUFuaW1hdGlvbiA9IHRoaXMuY29uZmV0dGlBbmltYXRpb25zW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHRoaXMuY29uZmV0dGlBbmltYXRpb25zLmxlbmd0aCldO1xuXG4gICAgICAgIGNvbmZldHRpRWwuY2xhc3NMaXN0LmFkZCgnY29uZmV0dGknLCAnY29uZmV0dGktLWFuaW1hdGlvbi0nICsgY29uZmV0dGlBbmltYXRpb24pO1xuICAgICAgICBjb25mZXR0aUVsLnN0eWxlLmxlZnQgPSBjb25mZXR0aUxlZnQ7XG4gICAgICAgIGNvbmZldHRpRWwuc3R5bGUud2lkdGggPSBjb25mZXR0aVNpemU7XG4gICAgICAgIGNvbmZldHRpRWwuc3R5bGUuaGVpZ2h0ID0gY29uZmV0dGlTaXplO1xuICAgICAgICBjb25mZXR0aUVsLnN0eWxlLmJhY2tncm91bmQgPSBjb25mZXR0aUJhY2tncm91bmQ7XG5cblxuICAgICAgICBjb25mZXR0aUVsLnJlbW92ZVRpbWVvdXQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgY29uZmV0dGlFbC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGNvbmZldHRpRWwpO1xuICAgICAgICB9LCAzMDAwKTtcblxuICAgICAgICB0aGlzLmNvbnRhaW5lckVsLmFwcGVuZENoaWxkKGNvbmZldHRpRWwpO1xuICAgIH0sIDYwKTtcblxuXG59O1xuXG53aW5kb3cuY29uZmV0dGlmdWwgPSBuZXcgQ29uZmV0dGlmdWwoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmpzLWNvbnRhaW5lcicpKTtcblxuXG5cblxudmFyIHNsb3RzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJhb19fc2xvdCcpO1xudmFyIGNvbHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuY29sJyk7XG52YXIgY29sMSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb2wtb25lJyk7XG52YXIgY29sMiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb2wtdHdvJyk7XG52YXIgY29sMyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb2wtdGhyZWUnKTtcbmZvcih2YXIgaSBpbiBjb2xzKSB7XG4gICAgaWYgKCFjb2xzLmhhc093blByb3BlcnR5KGkpKVxuICAgICAgICBjb250aW51ZTtcbiAgICB2YXIgY29sID0gY29sc1tpXTtcbiAgICB2YXIgc3RyID0gJyc7XG4gICAgdmFyIGZpcnN0VGhyZWUgPSAnJztcbiAgICBmb3IodmFyIHggPSAwOyB4IDwgMzA7IHgrKykge1xuICAgICAgICB2YXIgcGFydCA9ICc8aW1nIGNsYXNzPVwiaWNvblwiIHNyYz1cImltZy9zbG90cy8nK2ljb25zW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSppY29ucy5sZW5ndGgpXSsnXCI+JztcbiAgICAgICAgc3RyICs9IHBhcnRcbiAgICAgICAgaWYgKHggPCAzKSBmaXJzdFRocmVlICs9IHBhcnQ7XG4gICAgfVxuICAgIGxldCBjb250ZW50ID0gY29sLmlubmVySFRNTFxuICAgIGNvbC5pbm5lckhUTUwgPSBjb250ZW50ICsgc3RyK2ZpcnN0VGhyZWU7XG59XG5cbmxldCB3aW4zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnN0YXJ0MycpXG5sZXQgd2luMiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5zdGFydDInKVxubGV0IG92ZXJsYXkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYmFvX19vdmVybGF5JylcbmxldCBmaXJzdFdpbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5iYW9fX2ZpcnN0V2luJylcbmxldCBmaXJzdFdpbkJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5iYW9fX2ZpcnN0V2luLWJ0bicpXG5sZXQgc2Vjb25kV2luID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJhb19fc2Vjb25kV2luJylcbmxldCB0ZXh0TWFpbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5iYW9fX3RleHQnKVxubGV0IHRleHRXaW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYmFvX190ZXh0V2luJylcbmxldCBidG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYmFvX19idG4nKVxubGV0IGZpcnN0d2luQW5pbSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy53aW4tZmlyZScpXG5sZXQgc2Vjb25kd2luQW5pbSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy53aW4tZmlyZS1ibHVlJylcbmxldCBmaXJzdFdpblNjYWxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLndpbi1zY2FsZScpXG5sZXQgc2Vjb25kV2luU2NhbGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcud2luLXNjYWxlLWJsdWUnKVxubGV0IGNvdW50ZXIgPSAnJ1xuXG5idG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKT0+IHtcbiAgICBzcGluKHRoaXMpXG4gICAgY291bnRlcisrXG4gICAgYnRuLmNsYXNzTGlzdC5hZGQoJ3BvaW50ZXItbm9uZScpXG59KVxuXG5maXJzdFdpbkJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpPT4ge1xuICAgIGJ0bi5jbGFzc0xpc3QucmVtb3ZlKCdwb2ludGVyLW5vbmUnKVxuICAgIG92ZXJsYXkuY2xhc3NMaXN0LmFkZCgnb3BhY2l0eScpXG4gICAgZmlyc3RXaW4uY2xhc3NMaXN0LmFkZCgnaGlkZGVuJylcbiAgICBjb2wyLmNsYXNzTGlzdC5yZW1vdmUoJ3dpbicpXG4gICAgY29sMy5jbGFzc0xpc3QucmVtb3ZlKCd3aW4nKVxuICAgIGZpcnN0d2luQW5pbS5jbGFzc0xpc3QucmVtb3ZlKCdfYWRkJylcbiAgICBmaXJzdFdpblNjYWxlLmZvckVhY2goaXRlbT0+e1xuICAgICAgICBpdGVtLmNsYXNzTGlzdC5yZW1vdmUoJ19hZGQnKVxuICAgIH0pXG59KVxuXG5mdW5jdGlvbiBzcGluKGVsZW0pIHtcbiAgICBzbG90cy5jbGFzc0xpc3QudG9nZ2xlKCdzcGlubmluZycsIHRydWUpO1xuICAgIHdpbmRvdy5zZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICBsZXQgc3RhcnRJY29uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnN0YXJ0JylcbiAgICAgICAgc3RhcnRJY29uLmZvckVhY2goaXRlbSA9PiB7XG4gICAgICAgICAgICBpdGVtLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSdcbiAgICAgICAgfSlcbiAgICAgICAgd2luMi5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgICAgICAgaXRlbS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJ1xuICAgICAgICAgICAgaXRlbS5zdHlsZS50cmFuc2Zvcm0gPSAnc2NhbGVYKC0xKSByb3RhdGUoMTgwZGVnKSdcbiAgICAgICAgfSlcbiAgICAgICAgICAgIHZhciBpY29ucyA9IFtcbiAgICAgICAgICAgICAgICAnd2luMS5wbmcnLCd3aW4yLnBuZycsJ3dpbjMucG5nJywnd2luNC5wbmcnLCd3aW41LnBuZycsJ3dpbjYucG5nJywnd2luNy5wbmcnLCd3aW44LnBuZydcbiAgICAgICAgICAgIF07XG5cbiAgICAgICAgICAgIGlmKGNvdW50ZXIgPT09IDEpe1xuICAgICAgICAgICAgICAgIHZhciByZXN1bHRzMSA9IFtcbiAgICAgICAgICAgICAgICAgICAgaWNvbnNbMF0sXG4gICAgICAgICAgICAgICAgICAgIGljb25zWzBdLFxuICAgICAgICAgICAgICAgICAgICBpY29uc1swXVxuICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICB2YXIgcmVzdWx0czIgPSBbXG4gICAgICAgICAgICAgICAgICAgIGljb25zWzVdLFxuICAgICAgICAgICAgICAgICAgICBpY29uc1s3XSxcbiAgICAgICAgICAgICAgICAgICAgaWNvbnNbNl1cbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgdmFyIHJlc3VsdHMzID0gW1xuICAgICAgICAgICAgICAgICAgICBpY29uc1s0XSxcbiAgICAgICAgICAgICAgICAgICAgaWNvbnNbMl0sXG4gICAgICAgICAgICAgICAgICAgIGljb25zWzNdXG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgIHZhciBpY29ucyA9IGNvbDEucXVlcnlTZWxlY3RvckFsbCgnLmljb24nKTtcbiAgICAgICAgICAgICAgICBmb3IodmFyIHggPSAwOyB4IDwgMzsgeCsrKSB7XG4gICAgICAgICAgICAgICAgICAgIGljb25zW3hdLnNldEF0dHJpYnV0ZSgnc3JjJywgJ2ltZy9zbG90cy8nK3Jlc3VsdHMxW3hdKTtcbiAgICAgICAgICAgICAgICAgICAgaWNvbnNbKGljb25zLmxlbmd0aC0zKSt4XS5zZXRBdHRyaWJ1dGUoJ3NyYycsICdpbWcvc2xvdHMvJytyZXN1bHRzMVt4XSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciBpY29uczIgPSBjb2wyLnF1ZXJ5U2VsZWN0b3JBbGwoJy5pY29uJyk7XG4gICAgICAgICAgICAgICAgdmFyIGljb25zMyA9IGNvbDMucXVlcnlTZWxlY3RvckFsbCgnLmljb24nKTtcbiAgICAgICAgICAgICAgICBmb3IodmFyIHggPSAwOyB4IDwgMzsgeCsrKSB7XG4gICAgICAgICAgICAgICAgICAgIGljb25zMlt4XS5zZXRBdHRyaWJ1dGUoJ3NyYycsICdpbWcvc2xvdHMvJytyZXN1bHRzMlt4XSk7XG4gICAgICAgICAgICAgICAgICAgIGljb25zMlsoaWNvbnMubGVuZ3RoLTMpK3hdLnNldEF0dHJpYnV0ZSgnc3JjJywgJ2ltZy9zbG90cy8nK3Jlc3VsdHMyW3hdKTtcbiAgICAgICAgICAgICAgICAgICAgaWNvbnMzW3hdLnNldEF0dHJpYnV0ZSgnc3JjJywgJ2ltZy9zbG90cy8nK3Jlc3VsdHMzW3hdKTtcbiAgICAgICAgICAgICAgICAgICAgaWNvbnMzWyhpY29ucy5sZW5ndGgtMykreF0uc2V0QXR0cmlidXRlKCdzcmMnLCAnaW1nL3Nsb3RzLycrcmVzdWx0czNbeF0pO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGNvbDIuY2xhc3NMaXN0LmFkZCgnd2luJylcbiAgICAgICAgICAgICAgICBjb2wzLmNsYXNzTGlzdC5hZGQoJ3dpbicpXG4gICAgICAgICAgICAgICAgdGV4dFdpbi5jbGFzc0xpc3QuYWRkKCd2aXNpYmxlJylcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgZmlyc3R3aW5BbmltLmNsYXNzTGlzdC5hZGQoJ19hZGQnKVxuICAgICAgICAgICAgICAgICAgICBmaXJzdFdpblNjYWxlLmZvckVhY2goaXRlbT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS5jbGFzc0xpc3QuYWRkKCdfYWRkJylcbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICB9LCAxNTAwKVxuXG5cbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgb3ZlcmxheS5jbGFzc0xpc3QucmVtb3ZlKCdvcGFjaXR5JylcbiAgICAgICAgICAgICAgICAgICAgZmlyc3RXaW4uY2xhc3NMaXN0LnJlbW92ZSgnaGlkZGVuJylcbiAgICAgICAgICAgICAgICAgICAgdGV4dE1haW4uaW5uZXJIVE1MID0gJ09uZSBhdHRlbXB0IGxlZnQnXG5cbiAgICAgICAgICAgICAgICB9LCAzMzAwKTtcblxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYoY291bnRlciA9PT0gMil7XG5cbiAgICAgICAgICAgICAgICB3aW4zLmZvckVhY2goaXRlbSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGl0ZW0uc3R5bGUuZGlzcGxheSA9ICdibG9jaydcbiAgICAgICAgICAgICAgICAgICAgaXRlbS5zdHlsZS50cmFuc2Zvcm0gPSAnc2NhbGVYKC0xKSByb3RhdGUoMTgwZGVnKSdcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC8vZm9yIGlvcyBmb3hcbiAgICAgICAgICAgICAgICBmb3IodmFyIHggPSAwOyB4IDwgOTsgeCsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHdpbjJbMF0uc2V0QXR0cmlidXRlKCdzcmMnLCAnaW1nL3Nsb3RzL3dpbjEucG5nJyk7XG4gICAgICAgICAgICAgICAgICAgIHdpbjJbMV0uc2V0QXR0cmlidXRlKCdzcmMnLCAnaW1nL3Nsb3RzL3dpbjcucG5nJyk7XG4gICAgICAgICAgICAgICAgICAgIHdpbjJbMl0uc2V0QXR0cmlidXRlKCdzcmMnLCAnaW1nL3Nsb3RzL3dpbjYucG5nJyk7XG4gICAgICAgICAgICAgICAgICAgIHdpbjJbM10uc2V0QXR0cmlidXRlKCdzcmMnLCAnaW1nL3Nsb3RzL3dpbjMucG5nJyk7XG4gICAgICAgICAgICAgICAgICAgIHdpbjJbNF0uc2V0QXR0cmlidXRlKCdzcmMnLCAnaW1nL3Nsb3RzL3dpbjMucG5nJyk7XG4gICAgICAgICAgICAgICAgICAgIHdpbjJbNV0uc2V0QXR0cmlidXRlKCdzcmMnLCAnaW1nL3Nsb3RzL3dpbjMucG5nJyk7XG4gICAgICAgICAgICAgICAgICAgIHdpbjJbNl0uc2V0QXR0cmlidXRlKCdzcmMnLCAnaW1nL3Nsb3RzL3dpbjUucG5nJyk7XG4gICAgICAgICAgICAgICAgICAgIHdpbjJbN10uc2V0QXR0cmlidXRlKCdzcmMnLCAnaW1nL3Nsb3RzL3dpbjMucG5nJyk7XG4gICAgICAgICAgICAgICAgICAgIHdpbjJbOF0uc2V0QXR0cmlidXRlKCdzcmMnLCAnaW1nL3Nsb3RzL3dpbjQucG5nJyk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgdmFyIHJlc3VsdHMxID0gW1xuICAgICAgICAgICAgICAgICAgICBpY29uc1swXSxcbiAgICAgICAgICAgICAgICAgICAgaWNvbnNbNl0sXG4gICAgICAgICAgICAgICAgICAgIGljb25zWzVdXG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgIHZhciByZXN1bHRzMiA9IFtcbiAgICAgICAgICAgICAgICAgICAgaWNvbnNbMl0sXG4gICAgICAgICAgICAgICAgICAgIGljb25zWzJdLFxuICAgICAgICAgICAgICAgICAgICBpY29uc1syXVxuICAgICAgICAgICAgICAgIF1cblxuICAgICAgICAgICAgICAgIHZhciBpY29ucyA9IGNvbDEucXVlcnlTZWxlY3RvckFsbCgnLmljb24nKTtcbiAgICAgICAgICAgICAgICB2YXIgaWNvbnMyID0gY29sMi5xdWVyeVNlbGVjdG9yQWxsKCcuaWNvbicpO1xuICAgICAgICAgICAgICAgIGZvcih2YXIgeCA9IDA7IHggPCAzOyB4KyspIHtcbiAgICAgICAgICAgICAgICAgICAgaWNvbnNbeF0uc2V0QXR0cmlidXRlKCdzcmMnLCAnaW1nL3Nsb3RzLycrcmVzdWx0czFbeF0pO1xuICAgICAgICAgICAgICAgICAgICBpY29uc1soaWNvbnMubGVuZ3RoLTMpK3hdLnNldEF0dHJpYnV0ZSgnc3JjJywgJ2ltZy9zbG90cy8nK3Jlc3VsdHMxW3hdKTtcbiAgICAgICAgICAgICAgICAgICAgaWNvbnMyW3hdLnNldEF0dHJpYnV0ZSgnc3JjJywgJ2ltZy9zbG90cy8nK3Jlc3VsdHMyW3hdKTtcbiAgICAgICAgICAgICAgICAgICAgaWNvbnMyWyhpY29ucy5sZW5ndGgtMykreF0uc2V0QXR0cmlidXRlKCdzcmMnLCAnaW1nL3Nsb3RzLycrcmVzdWx0czJbeF0pO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGNvbDEuY2xhc3NMaXN0LmFkZCgnd2luJylcbiAgICAgICAgICAgICAgICBjb2wzLmNsYXNzTGlzdC5hZGQoJ3dpbicpXG4gICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHNlY29uZHdpbkFuaW0uY2xhc3NMaXN0LmFkZCgnX2FkZCcpXG4gICAgICAgICAgICAgICAgICAgIHNlY29uZFdpblNjYWxlLmZvckVhY2goaXRlbT0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS5jbGFzc0xpc3QuYWRkKCdfYWRkJylcbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICB9LCAxNTAwKVxuXG4gICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIG92ZXJsYXkuY2xhc3NMaXN0LnJlbW92ZSgnb3BhY2l0eScpXG4gICAgICAgICAgICAgICAgICAgIHNlY29uZFdpbi5jbGFzc0xpc3QucmVtb3ZlKCdoaWRkZW4nKVxuICAgICAgICAgICAgICAgIH0sIDMzMDApO1xuICAgICAgICAgICAgfVxuICAgIH0sIDE1MDApO1xuXG5cbiAgICB3aW5kb3cuc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgc2xvdHMuY2xhc3NMaXN0LnRvZ2dsZSgnc3Bpbm5pbmcnLCBmYWxzZSk7XG5cbiAgICB9LmJpbmQoZWxlbSksIDM1MDApO1xufVxuXG5cbihmdW5jdGlvbiAoKSB7XG4gICAgbGV0IHVybCA9IG5ldyBVUkwod2luZG93LmxvY2F0aW9uLmhyZWYpXG5cbiAgICBpZiAodXJsLnNlYXJjaFBhcmFtcy5oYXMoJ3F0YWcnKSkge1xuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgncXRhZycsIHVybC5zZWFyY2hQYXJhbXMuZ2V0KCdxdGFnJykpXG4gICAgfVxuXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgY29uc3QgcGFyZW50ID0gZS50YXJnZXQuY2xvc2VzdCgnYScpXG4gICAgICAgIGlmIChwYXJlbnQpIHtcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgICAgICAgICAgbGV0IGxpbmsgPSBuZXcgVVJMKHBhcmVudC5ocmVmKVxuICAgICAgICAgICAgbGluay5zZWFyY2hQYXJhbXMuc2V0KCdxdGFnJywgbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3F0YWcnKSlcbiAgICAgICAgICAgIGRvY3VtZW50LmxvY2F0aW9uLmhyZWYgPSBsaW5rXG4gICAgICAgIH1cbiAgICB9KVxufSkoKTtcblxuXG5cblxuXG5cbiIsIiJdfQ==
